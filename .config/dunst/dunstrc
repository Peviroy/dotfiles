#========================================================================
#  ______   __  __   ___   __    ______   _________  ______    ______      
# /_____/\ /_/\/_/\ /__/\ /__/\ /_____/\ /________/\/_____/\  /_____/\     
# \:::_ \ \\:\ \:\ \\::\_\\  \ \\::::_\/_\__.::.__\/\:::_ \ \ \:::__\/     
#  \:\ \ \ \\:\ \:\ \\:. `-\  \ \\:\/___/\  \::\ \   \:(_) ) )_\:\ \  __   
#   \:\ \ \ \\:\ \:\ \\:. _    \ \\_::._\:\  \::\ \   \: __ `\ \\:\ \/_/\  
#    \:\/.:| |\:\_\:\ \\. \`-\  \ \ /____\:\  \::\ \   \ \ `\ \ \\:\_\ \ \ 
#     \____/_/ \_____\/ \__\/ \__\/ \_____\/   \__\/    \_\/ \_\/ \_____\/ 
#========================================================================
# See /usr/share/dunst/dunstrc for more.
[global]
	  #==================
    #===  Display
		#==================
    monitor = 0
    follow = mouse
    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else
    # in pixels.  If the width is omitted but the height is given
    # ("-geometry x2"), the message window expands over the whole screen
    # (dmenu-like).  If width is 0, the window expands to the longest
    # message displayed.  A positive x is measured from the left, a
    # negative from the right side of the screen.  Y is measured from
    # the top and down respectively.
    # The width can be negative.  In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    # === Adjust
    geometry = "430x15-28+80"
    shrink = no
    transparency = 5
    notification_height = 50
    # Distance between two notice
    separator_height = 2
    # Padding between text and separator.
    padding = 10
    # Horizontal padding.
    horizontal_padding = 20
    # Frame around the notification window.
    frame_width = 1
    frame_color = "#4c566a"
    # Sort messages by urgency.
    sort = no

	  #==================
    #===  Text
		#==================
    font = Overpass 14
    line_height = 5
    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"
    # Alignment of message text.
    alignment = right
    # Show age of message if message is older than show_age_threshold
    show_age_threshold = 60
    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes
    stack_duplicates = true
    hide_duplicate_count = true
    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

	  #==================
    #===  Icon
		#==================
    icon_position = left
    min_icon_size = 0
    max_icon_size = 32
    icon_path =  /usr/share/icons/Papirus-Light/64x64@2x/apps:/usr/share/icons/Papirus-Light/24x24@2x/apps/:/usr/share/icons/Papirus-Light/24x24@2x/actions/

	  #==================
    #===  History
		#==================
    sticky_history = yes
    history_length = 20

	  #==================
    #===  Misc/Advanced
		#==================
    dmenu = /usr/bin/dmenu -p dunst:
    browser = /usr/bin/firefox -new-tab
    always_run_script = true
    title = Dunst
    class = Dunst
    # Manage dunst's desire for talking
    # Can be one of the following values:
    #  crit: Critical features. Dunst aborts
    #  warn: Only non-fatal warnings
    #  mesg: Important Messages
    #  info: all unimportant stuff
    # debug: all less than unimportant stuff
    verbosity = info
    corner_radius = 0
		
	  #==================
    #===  Misc/Advanced
		#==================
    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+grave
    context = ctrl+shift+period

[urgency_low]
    background = "#2e3440"
    foreground = "#eceff4"
    timeout = 5

[urgency_normal]
    background = "#2e3440"
    foreground = "#eceff4"
    timeout = 5

[urgency_critical]
    background = "#2e3440"
    foreground = "#eceff4"
    timeout = 0
